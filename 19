import streamlit as st
import openai

# API 키 입력
api_key = st.sidebar.text_input("🔑 OpenAI API Key", type="password")

# API 키 없으면 종료
if not api_key:
    st.warning("API Key를 입력하세요")
    st.stop()

openai.api_key = api_key

# ✅ 세션 상태 초기화는 한 번만!
if "messages" not in st.session_state:
    st.session_state.messages = [
        {"role": "system", "content": "당신은 친절한 AI 비서입니다."}
    ]

# ✅ 이전 메시지 출력
for msg in st.session_state.messages[1:]:
    with st.chat_message(msg["role"]):
        st.markdown(msg["content"])

# ✅ 사용자 입력 받기
if prompt := st.chat_input("질문을 입력하세요"):
    # 사용자 입력 저장
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # ✅ 전체 대화 context 전달
    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=st.session_state.messages
    )
    assistant_reply = response.choices[0].message["content"]

    # GPT 응답 저장
    st.session_state.messages.append({"role": "assistant", "content": assistant_reply})
    with st.chat_message("assistant"):
        st.markdown(assistant_reply)

# ✅ 대화 초기화 버튼
if st.sidebar.button("🧹 초기화"):
    st.session_state.messages = [
        {"role": "system", "content": "당신은 친절한 AI 비서입니다."}
    ]
    st.rerun()
