import streamlit as st
import openai

# 페이지 설정
st.set_page_config(page_title="GPT Chat", page_icon="💬")

# API 키 입력
api_key = st.sidebar.text_input("🔑 OpenAI API Key", type="password")

# 상태 초기화 (최초 1회만)
if "messages" not in st.session_state:
    st.session_state.messages = [{"role": "system", "content": "You are a helpful assistant."}]

# API 키 없으면 중단
if not api_key:
    st.warning("🔑 API Key를 왼쪽에 입력하세요.")
    st.stop()

# GPT 응답 함수
def chat_with_gpt(messages):
    openai.api_key = api_key
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",  # 또는 "gpt-3.5-turbo"
            messages=messages
        )
        return response.choices[0].message["content"]
    except Exception as e:
        return f"❌ 오류: {str(e)}"

# 대화 출력
for msg in st.session_state.messages[1:]:
    with st.chat_message(msg["role"]):
        st.markdown(msg["content"])

# 사용자 입력
user_input = st.chat_input("메시지를 입력하세요...")

if user_input:
    # 입력 저장
    st.session_state.messages.append({"role": "user", "content": user_input})
    with st.chat_message("user"):
        st.markdown(user_input)

    # GPT 응답
    response = chat_with_gpt(st.session_state.messages)
    st.session_state.messages.append({"role": "assistant", "content": response})
    with st.chat_message("assistant"):
        st.markdown(response)

# Clear 버튼
if st.sidebar.button("🧹 대화 초기화"):
    st.session_state.messages = [{"role": "system", "content": "You are a helpful assistant."}]
    st.rerun()
